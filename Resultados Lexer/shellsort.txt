   1  Funcao Vazio shellsort(Int array[ ], Int n) Initiate
              [   1,    1] (   4,          RESE_FUNCAO) (Funcao)
              [   1,    2] (  11,           RESE_VAZIO) (Vazio)
              [   1,    3] (  41,                   ID) (shellsort)
              [   1,    4] (  47,          DELI_OPAREN) (()
              [   1,    5] (   6,             RESE_INT) (Int)
              [   1,    6] (  41,                   ID) (array)
              [   1,    7] (  50,           DELI_OPBRA) ([)
              [   1,    8] (  49,           DELI_ENBRA) (])
              [   1,    9] (  51,           DELI_COMMA) (,)
              [   1,   10] (   6,             RESE_INT) (Int)
              [   1,   11] (  41,                   ID) (n)
              [   1,   12] (  48,          DELI_CPAREN) ())
              [   1,   13] (   1,        RESE_INITIATE) (Initiate)
   2  Int c;
              [   2,    1] (   6,             RESE_INT) (Int)
              [   2,    2] (  41,                   ID) (c)
              [   2,    3] (  52,           DELI_SECOL) (;)
   3  Int j;
              [   3,    1] (   6,             RESE_INT) (Int)
              [   3,    2] (  41,                   ID) (j)
              [   3,    3] (  52,           DELI_SECOL) (;)
   4  Int m = 1;
              [   4,    1] (   6,             RESE_INT) (Int)
              [   4,    2] (  41,                   ID) (m)
              [   4,    3] (  31,             OPE_ATRI) (=)
              [   4,    4] (  42,             CNST_INT) (1)
              [   4,    5] (  52,           DELI_SECOL) (;)
   5  Enquanto (m < n) Initiate
              [   5,    1] (  17,        RESE_ENQUANTO) (Enquanto)
              [   5,    2] (  47,          DELI_OPAREN) (()
              [   5,    3] (  41,                   ID) (m)
              [   5,    4] (  35,           OPE_MENORQ) (<)
              [   5,    5] (  41,                   ID) (n)
              [   5,    6] (  48,          DELI_CPAREN) ())
              [   5,    7] (   1,        RESE_INITIATE) (Initiate)
   6  m = m * 3 + 1;
              [   6,    1] (  41,                   ID) (m)
              [   6,    2] (  31,             OPE_ATRI) (=)
              [   6,    3] (  41,                   ID) (m)
              [   6,    4] (  27,            OPE_MULTI) (*)
              [   6,    5] (  42,             CNST_INT) (3)
              [   6,    6] (  25,              OPE_ADI) (+)
              [   6,    7] (  42,             CNST_INT) (1)
              [   6,    8] (  52,           DELI_SECOL) (;)
   7  Halt
              [   7,    1] (   2,            RESE_HALT) (Halt)
   8  m = m / 3;
              [   8,    1] (  41,                   ID) (m)
              [   8,    2] (  31,             OPE_ATRI) (=)
              [   8,    3] (  41,                   ID) (m)
              [   8,    4] (  28,              OPE_DIV) (/)
              [   8,    5] (  42,             CNST_INT) (3)
              [   8,    6] (  52,           DELI_SECOL) (;)
   9  Enquanto(m > 0) Initiate
              [   9,    1] (  17,        RESE_ENQUANTO) (Enquanto)
              [   9,    2] (  47,          DELI_OPAREN) (()
              [   9,    3] (  41,                   ID) (m)
              [   9,    4] (  36,           OPE_MAIORQ) (>)
              [   9,    5] (  42,             CNST_INT) (0)
              [   9,    6] (  48,          DELI_CPAREN) ())
              [   9,    7] (   1,        RESE_INITIATE) (Initiate)
  10  Loop (Int i = m, 1, n) Initiate
              [  10,    1] (  16,            RESE_LOOP) (Loop)
              [  10,    2] (  47,          DELI_OPAREN) (()
              [  10,    3] (   6,             RESE_INT) (Int)
              [  10,    4] (  41,                   ID) (i)
              [  10,    5] (  31,             OPE_ATRI) (=)
              [  10,    6] (  41,                   ID) (m)
              [  10,    7] (  51,           DELI_COMMA) (,)
              [  10,    8] (  42,             CNST_INT) (1)
              [  10,    9] (  51,           DELI_COMMA) (,)
              [  10,   10] (  41,                   ID) (n)
              [  10,   11] (  48,          DELI_CPAREN) ())
              [  10,   12] (   1,        RESE_INITIATE) (Initiate)
  11  c = array[i];
              [  11,    1] (  41,                   ID) (c)
              [  11,    2] (  31,             OPE_ATRI) (=)
              [  11,    3] (  41,                   ID) (array)
              [  11,    4] (  50,           DELI_OPBRA) ([)
              [  11,    5] (  41,                   ID) (i)
              [  11,    6] (  49,           DELI_ENBRA) (])
              [  11,    7] (  52,           DELI_SECOL) (;)
  12  j = i;
              [  12,    1] (  41,                   ID) (j)
              [  12,    2] (  31,             OPE_ATRI) (=)
              [  12,    3] (  41,                   ID) (i)
              [  12,    4] (  52,           DELI_SECOL) (;)
  13  Enquanto (j >= m & array[j - m] > c) Initiate
              [  13,    1] (  17,        RESE_ENQUANTO) (Enquanto)
              [  13,    2] (  47,          DELI_OPAREN) (()
              [  13,    3] (  41,                   ID) (j)
              [  13,    4] (  38,           OPE_MAIORI) (>=)
              [  13,    5] (  41,                   ID) (m)
              [  13,    6] (  23,           OPE_CONJUN) (&)
              [  13,    7] (  41,                   ID) (array)
              [  13,    8] (  50,           DELI_OPBRA) ([)
              [  13,    9] (  41,                   ID) (j)
              [  13,   10] (  26,              OPE_SUB) (-)
              [  13,   11] (  41,                   ID) (m)
              [  13,   12] (  49,           DELI_ENBRA) (])
              [  13,   13] (  36,           OPE_MAIORQ) (>)
              [  13,   14] (  41,                   ID) (c)
              [  13,   15] (  48,          DELI_CPAREN) ())
              [  13,   16] (   1,        RESE_INITIATE) (Initiate)
  14  array[j] = array[j - m];
              [  14,    1] (  41,                   ID) (array)
              [  14,    2] (  50,           DELI_OPBRA) ([)
              [  14,    3] (  41,                   ID) (j)
              [  14,    4] (  49,           DELI_ENBRA) (])
              [  14,    5] (  31,             OPE_ATRI) (=)
              [  14,    6] (  41,                   ID) (array)
              [  14,    7] (  50,           DELI_OPBRA) ([)
              [  14,    8] (  41,                   ID) (j)
              [  14,    9] (  26,              OPE_SUB) (-)
              [  14,   10] (  41,                   ID) (m)
              [  14,   11] (  49,           DELI_ENBRA) (])
              [  14,   12] (  52,           DELI_SECOL) (;)
  15  j = j - m;
              [  15,    1] (  41,                   ID) (j)
              [  15,    2] (  31,             OPE_ATRI) (=)
              [  15,    3] (  41,                   ID) (j)
              [  15,    4] (  26,              OPE_SUB) (-)
              [  15,    5] (  41,                   ID) (m)
              [  15,    6] (  52,           DELI_SECOL) (;)
  16  Halt
              [  16,    1] (   2,            RESE_HALT) (Halt)
  17  array[j] = c;
              [  17,    1] (  41,                   ID) (array)
              [  17,    2] (  50,           DELI_OPBRA) ([)
              [  17,    3] (  41,                   ID) (j)
              [  17,    4] (  49,           DELI_ENBRA) (])
              [  17,    5] (  31,             OPE_ATRI) (=)
              [  17,    6] (  41,                   ID) (c)
              [  17,    7] (  52,           DELI_SECOL) (;)
  18  Halt
              [  18,    1] (   2,            RESE_HALT) (Halt)
  19  m = m / 2;
              [  19,    1] (  41,                   ID) (m)
              [  19,    2] (  31,             OPE_ATRI) (=)
              [  19,    3] (  41,                   ID) (m)
              [  19,    4] (  28,              OPE_DIV) (/)
              [  19,    5] (  42,             CNST_INT) (2)
              [  19,    6] (  52,           DELI_SECOL) (;)
  20  Halt
              [  20,    1] (   2,            RESE_HALT) (Halt)
  21  Retorna;
              [  21,    1] (   5,         RESE_RETORNA) (Retorna)
              [  21,    2] (  52,           DELI_SECOL) (;)
  22  Halt
              [  22,    1] (   2,            RESE_HALT) (Halt)
  23
  24  Funcao Vazio Central() Initiate
              [  24,    1] (   4,          RESE_FUNCAO) (Funcao)
              [  24,    2] (  11,           RESE_VAZIO) (Vazio)
              [  24,    3] (   3,         RESE_CENTRAL) (Central)
              [  24,    4] (  47,          DELI_OPAREN) (()
              [  24,    5] (  48,          DELI_CPAREN) ())
              [  24,    6] (   1,        RESE_INITIATE) (Initiate)
  25  Int n;
              [  25,    1] (   6,             RESE_INT) (Int)
              [  25,    2] (  41,                   ID) (n)
              [  25,    3] (  52,           DELI_SECOL) (;)
  26  Int atual;
              [  26,    1] (   6,             RESE_INT) (Int)
              [  26,    2] (  41,                   ID) (atual)
              [  26,    3] (  52,           DELI_SECOL) (;)
  27  Escrever("Tamanho do array:");
              [  27,    1] (  21,        RESE_ESCREVER) (Escrever)
              [  27,    2] (  47,          DELI_OPAREN) (()
              [  27,    3] (  46,             CNST_STR) ("Tamanho do array:")
              [  27,    4] (  48,          DELI_CPAREN) ())
              [  27,    5] (  52,           DELI_SECOL) (;)
  28  Ler(n);
              [  28,    1] (  20,             RESE_LER) (Ler)
              [  28,    2] (  47,          DELI_OPAREN) (()
              [  28,    3] (  41,                   ID) (n)
              [  28,    4] (  48,          DELI_CPAREN) ())
              [  28,    5] (  52,           DELI_SECOL) (;)
  29  Int array[n];
              [  29,    1] (   6,             RESE_INT) (Int)
              [  29,    2] (  41,                   ID) (array)
              [  29,    3] (  50,           DELI_OPBRA) ([)
              [  29,    4] (  41,                   ID) (n)
              [  29,    5] (  49,           DELI_ENBRA) (])
              [  29,    6] (  52,           DELI_SECOL) (;)
  30  Escrever("Elementos do array: ");
              [  30,    1] (  21,        RESE_ESCREVER) (Escrever)
              [  30,    2] (  47,          DELI_OPAREN) (()
              [  30,    3] (  46,             CNST_STR) ("Elementos do array: ")
              [  30,    4] (  48,          DELI_CPAREN) ())
              [  30,    5] (  52,           DELI_SECOL) (;)
  31  Loop (Int i = 0, 1, n) Initiate
              [  31,    1] (  16,            RESE_LOOP) (Loop)
              [  31,    2] (  47,          DELI_OPAREN) (()
              [  31,    3] (   6,             RESE_INT) (Int)
              [  31,    4] (  41,                   ID) (i)
              [  31,    5] (  31,             OPE_ATRI) (=)
              [  31,    6] (  42,             CNST_INT) (0)
              [  31,    7] (  51,           DELI_COMMA) (,)
              [  31,    8] (  42,             CNST_INT) (1)
              [  31,    9] (  51,           DELI_COMMA) (,)
              [  31,   10] (  41,                   ID) (n)
              [  31,   11] (  48,          DELI_CPAREN) ())
              [  31,   12] (   1,        RESE_INITIATE) (Initiate)
  32  Ler(array[i]);
              [  32,    1] (  20,             RESE_LER) (Ler)
              [  32,    2] (  47,          DELI_OPAREN) (()
              [  32,    3] (  41,                   ID) (array)
              [  32,    4] (  50,           DELI_OPBRA) ([)
              [  32,    5] (  41,                   ID) (i)
              [  32,    6] (  49,           DELI_ENBRA) (])
              [  32,    7] (  48,          DELI_CPAREN) ())
              [  32,    8] (  52,           DELI_SECOL) (;)
  33  Halt
              [  33,    1] (   2,            RESE_HALT) (Halt)
  34  Escrever("Array: ");
              [  34,    1] (  21,        RESE_ESCREVER) (Escrever)
              [  34,    2] (  47,          DELI_OPAREN) (()
              [  34,    3] (  46,             CNST_STR) ("Array: ")
              [  34,    4] (  48,          DELI_CPAREN) ())
              [  34,    5] (  52,           DELI_SECOL) (;)
  35  Loop (Int i = 0, 1, n) Initiate
              [  35,    1] (  16,            RESE_LOOP) (Loop)
              [  35,    2] (  47,          DELI_OPAREN) (()
              [  35,    3] (   6,             RESE_INT) (Int)
              [  35,    4] (  41,                   ID) (i)
              [  35,    5] (  31,             OPE_ATRI) (=)
              [  35,    6] (  42,             CNST_INT) (0)
              [  35,    7] (  51,           DELI_COMMA) (,)
              [  35,    8] (  42,             CNST_INT) (1)
              [  35,    9] (  51,           DELI_COMMA) (,)
              [  35,   10] (  41,                   ID) (n)
              [  35,   11] (  48,          DELI_CPAREN) ())
              [  35,   12] (   1,        RESE_INITIATE) (Initiate)
  36  atual = array[i];
              [  36,    1] (  41,                   ID) (atual)
              [  36,    2] (  31,             OPE_ATRI) (=)
              [  36,    3] (  41,                   ID) (array)
              [  36,    4] (  50,           DELI_OPBRA) ([)
              [  36,    5] (  41,                   ID) (i)
              [  36,    6] (  49,           DELI_ENBRA) (])
              [  36,    7] (  52,           DELI_SECOL) (;)
  37  Escreverpl(atual);
              [  37,    1] (  22,      RESE_ESCREVERPL) (Escreverpl)
              [  37,    2] (  47,          DELI_OPAREN) (()
              [  37,    3] (  41,                   ID) (atual)
              [  37,    4] (  48,          DELI_CPAREN) ())
              [  37,    5] (  52,           DELI_SECOL) (;)
  38  Halt
              [  38,    1] (   2,            RESE_HALT) (Halt)
  39  shellsort(array[n], n);
              [  39,    1] (  41,                   ID) (shellsort)
              [  39,    2] (  47,          DELI_OPAREN) (()
              [  39,    3] (  41,                   ID) (array)
              [  39,    4] (  50,           DELI_OPBRA) ([)
              [  39,    5] (  41,                   ID) (n)
              [  39,    6] (  49,           DELI_ENBRA) (])
              [  39,    7] (  51,           DELI_COMMA) (,)
              [  39,    8] (  41,                   ID) (n)
              [  39,    9] (  48,          DELI_CPAREN) ())
              [  39,   10] (  52,           DELI_SECOL) (;)
  40  Escrever("Valores ordenados: ");
              [  40,    1] (  21,        RESE_ESCREVER) (Escrever)
              [  40,    2] (  47,          DELI_OPAREN) (()
              [  40,    3] (  46,             CNST_STR) ("Valores ordenados: ")
              [  40,    4] (  48,          DELI_CPAREN) ())
              [  40,    5] (  52,           DELI_SECOL) (;)
  41
  42  Loop (Int i = 0, 1, n) Initiate
              [  42,    1] (  16,            RESE_LOOP) (Loop)
              [  42,    2] (  47,          DELI_OPAREN) (()
              [  42,    3] (   6,             RESE_INT) (Int)
              [  42,    4] (  41,                   ID) (i)
              [  42,    5] (  31,             OPE_ATRI) (=)
              [  42,    6] (  42,             CNST_INT) (0)
              [  42,    7] (  51,           DELI_COMMA) (,)
              [  42,    8] (  42,             CNST_INT) (1)
              [  42,    9] (  51,           DELI_COMMA) (,)
              [  42,   10] (  41,                   ID) (n)
              [  42,   11] (  48,          DELI_CPAREN) ())
              [  42,   12] (   1,        RESE_INITIATE) (Initiate)
  43  atual = array[i];
              [  43,    1] (  41,                   ID) (atual)
              [  43,    2] (  31,             OPE_ATRI) (=)
              [  43,    3] (  41,                   ID) (array)
              [  43,    4] (  50,           DELI_OPBRA) ([)
              [  43,    5] (  41,                   ID) (i)
              [  43,    6] (  49,           DELI_ENBRA) (])
              [  43,    7] (  52,           DELI_SECOL) (;)
  44  Escreverpl(atual);
              [  44,    1] (  22,      RESE_ESCREVERPL) (Escreverpl)
              [  44,    2] (  47,          DELI_OPAREN) (()
              [  44,    3] (  41,                   ID) (atual)
              [  44,    4] (  48,          DELI_CPAREN) ())
              [  44,    5] (  52,           DELI_SECOL) (;)
  45  Halt
              [  45,    1] (   2,            RESE_HALT) (Halt)
  46
  47  Retorna;
              [  47,    1] (   5,         RESE_RETORNA) (Retorna)
              [  47,    2] (  52,           DELI_SECOL) (;)
  48  Halt
              [  48,    1] (   2,            RESE_HALT) (Halt)
              [  48,    1] (  53,             DELI_EOF) (EOF)